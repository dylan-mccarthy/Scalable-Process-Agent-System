// <auto-generated />
using System;
using ControlPlane.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ControlPlane.Api.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ControlPlane.Api.Data.AgentEntity", b =>
                {
                    b.Property<string>("AgentId")
                        .HasColumnType("text")
                        .HasColumnName("agent_id");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instructions");

                    b.Property<string>("ModelProfile")
                        .HasColumnType("jsonb")
                        .HasColumnName("model_profile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("AgentId");

                    b.HasIndex("Name");

                    b.ToTable("agents");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.AgentVersionEntity", b =>
                {
                    b.Property<int>("VersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("version_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VersionId"));

                    b.Property<string>("AgentId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("agent_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Spec")
                        .HasColumnType("jsonb")
                        .HasColumnName("spec");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("version");

                    b.HasKey("VersionId");

                    b.HasIndex("AgentId", "Version")
                        .IsUnique();

                    b.ToTable("agent_versions");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.DeploymentEntity", b =>
                {
                    b.Property<string>("DepId")
                        .HasColumnType("text")
                        .HasColumnName("dep_id");

                    b.Property<string>("AgentId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("agent_id");

                    b.Property<string>("Env")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("env");

                    b.Property<string>("Status")
                        .HasColumnType("jsonb")
                        .HasColumnName("status");

                    b.Property<string>("Target")
                        .HasColumnType("jsonb")
                        .HasColumnName("target");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("version");

                    b.HasKey("DepId");

                    b.HasIndex("AgentId", "Version", "Env");

                    b.ToTable("deployments");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.NodeEntity", b =>
                {
                    b.Property<string>("NodeId")
                        .HasColumnType("text")
                        .HasColumnName("node_id");

                    b.Property<string>("Capacity")
                        .HasColumnType("jsonb")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("HeartbeatAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("heartbeat_at");

                    b.Property<string>("Metadata")
                        .HasColumnType("jsonb")
                        .HasColumnName("metadata");

                    b.Property<string>("Status")
                        .HasColumnType("jsonb")
                        .HasColumnName("status");

                    b.HasKey("NodeId");

                    b.HasIndex("HeartbeatAt");

                    b.ToTable("nodes");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.RunEntity", b =>
                {
                    b.Property<string>("RunId")
                        .HasColumnType("text")
                        .HasColumnName("run_id");

                    b.Property<string>("AgentId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("agent_id");

                    b.Property<string>("Costs")
                        .HasColumnType("jsonb")
                        .HasColumnName("costs");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("DepId")
                        .HasColumnType("text")
                        .HasColumnName("dep_id");

                    b.Property<string>("InputRef")
                        .HasColumnType("jsonb")
                        .HasColumnName("input_ref");

                    b.Property<string>("NodeId")
                        .HasColumnType("text")
                        .HasColumnName("node_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("Timings")
                        .HasColumnType("jsonb")
                        .HasColumnName("timings");

                    b.Property<string>("TraceId")
                        .HasColumnType("text")
                        .HasColumnName("trace_id");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("version");

                    b.HasKey("RunId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("DepId");

                    b.HasIndex("NodeId");

                    b.HasIndex("Status");

                    b.HasIndex("AgentId", "Status");

                    b.ToTable("runs");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.AgentVersionEntity", b =>
                {
                    b.HasOne("ControlPlane.Api.Data.AgentEntity", "Agent")
                        .WithMany("Versions")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.DeploymentEntity", b =>
                {
                    b.HasOne("ControlPlane.Api.Data.AgentEntity", "Agent")
                        .WithMany("Deployments")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.RunEntity", b =>
                {
                    b.HasOne("ControlPlane.Api.Data.AgentEntity", "Agent")
                        .WithMany("Runs")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ControlPlane.Api.Data.DeploymentEntity", "Deployment")
                        .WithMany("Runs")
                        .HasForeignKey("DepId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ControlPlane.Api.Data.NodeEntity", "Node")
                        .WithMany("Runs")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Agent");

                    b.Navigation("Deployment");

                    b.Navigation("Node");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.AgentEntity", b =>
                {
                    b.Navigation("Deployments");

                    b.Navigation("Runs");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.DeploymentEntity", b =>
                {
                    b.Navigation("Runs");
                });

            modelBuilder.Entity("ControlPlane.Api.Data.NodeEntity", b =>
                {
                    b.Navigation("Runs");
                });
#pragma warning restore 612, 618
        }
    }
}
