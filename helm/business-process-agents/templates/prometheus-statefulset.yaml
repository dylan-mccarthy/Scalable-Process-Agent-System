{{- if .Values.observability.prometheus.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "business-process-agents.fullname" . }}-prometheus
  labels:
    {{- include "business-process-agents.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  serviceName: {{ include "business-process-agents.fullname" . }}-prometheus
  replicas: 1
  selector:
    matchLabels:
      {{- include "business-process-agents.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/prometheus-configmap.yaml") . | sha256sum }}
      labels:
        {{- include "business-process-agents.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "business-process-agents.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: prometheus
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.observability.prometheus.image.repository }}:{{ .Values.observability.prometheus.image.tag }}"
        imagePullPolicy: {{ .Values.observability.prometheus.image.pullPolicy }}
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
          - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
        - name: http
          containerPort: {{ .Values.observability.prometheus.service.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
        readinessProbe:
          httpGet:
            path: /-/ready
            port: http
        resources:
          {{- toYaml .Values.observability.prometheus.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
      volumes:
      - name: config
        configMap:
          name: {{ include "business-process-agents.fullname" . }}-prometheus-config
  {{- if .Values.observability.prometheus.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.observability.prometheus.persistence.storageClass }}
      {{- if (eq "-" .Values.observability.prometheus.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.observability.prometheus.persistence.storageClass }}
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.observability.prometheus.persistence.size }}
  {{- else }}
      - name: data
        emptyDir: {}
  {{- end }}
{{- end }}
